app TestMarkdown {
  wasp: {
    version: "^0.13.0"
  },
  title: "TestMarkdown",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id        Int                @id @default(autoincrement())
    questions AnsweredQuestion[]
psl=}

entity Markdown {=psl
    id        Int        @id @default(autoincrement())
    content   String
    questions Question[]
psl=}

entity Question {=psl
    id               Int                @id @default(autoincrement())
    content          String
    answer           String
    markdownId       Int
    markdown         Markdown           @relation(fields: [markdownId], references: [id])
    AnsweredQuestion AnsweredQuestion[]
psl=}

entity AnsweredQuestion {=psl
    id         Int      @id @default(autoincrement())
    answer     String
    isCorrect  Boolean
    questionId Int
    question   Question @relation(fields: [questionId], references: [id])
    userId     Int
    user       User     @relation(fields: [userId], references: [id])
psl=}

action submitAnswer {
  fn: import { submitAnswer } from "@src/actions.js",
  entities: [Question, User, AnsweredQuestion]
}

action createQuestion {
  fn: import { createQuestion } from "@src/actions.js",
  entities: [Markdown, Question]
}

query getUserAnswers {
  fn: import { getUserAnswers } from "@src/queries.js",
  entities: [User, AnsweredQuestion]
}

query getMarkdown {
  fn: import { getMarkdown } from "@src/queries.js",
  entities: [Markdown, Question]
}

route QuestionRoute { path: "/question/:questionId", to: QuestionPage }
page QuestionPage {
  component: import QuestionPage from "@src/pages/Question.jsx",
  authRequired: true
}

route MarkdownRoute { path: "/markdown/:markdownId", to: MarkdownPage }
page MarkdownPage {
  component: import MarkdownPage from "@src/pages/Markdown.jsx",
  authRequired: true
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: true
}